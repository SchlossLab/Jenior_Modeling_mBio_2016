# Matt Jenior

# This pipeline processes metagenomic reads, assembles, and annotates them to enable metatranscriptomic mapping




# Create network references for metabolic networks
cd /mnt/EXT/Schloss-data/matt/seeds/support
python create_network_refs.py





# Table of Contents
# 1. 
# 2. 
# 3. 
# 4. 
# 5. 
# 6. 
# 7. 
# 8. 
# 9. 
# 10. 

#-------------------------------------------------------------------------------------------------------------------------#

#!/bin/bash

cd /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/fastq/$1

pool_job_id=$(qsub -v sample_name=$1 /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/pbs/pool.pbs | sed 's/\..*$//')
echo $1 read pooling: $pool_job_id


# Select correct sequencing primers
F_primer=AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT
if [ $1 = 'cefoperazone_630' ]; then
	R_primer=CAAGCAGAAGACGGCATACGAGATCGTGATGTGACTGGAGTTCAGACGTGTGCTCTTCCGATC
fi
if [ $1 = 'cefoperazone_mock' ]; then
	R_primer=CAAGCAGAAGACGGCATACGAGATACATCGGTGACTGGAGTTCAGACGTGTGCTCTTCCGATC
fi
if [ $1 = 'clindamycin_630' ]; then
	R_primer=CAAGCAGAAGACGGCATACGAGATTGGTCAGTGACTGGAGTTCAGACGTGTGCTCTTCCGATC
fi
if [ $1 = 'clindamycin_mock' ]; then
	R_primer=CAAGCAGAAGACGGCATACGAGATGATCTGGTGACTGGAGTTCAGACGTGTGCTCTTCCGATC
fi
if [ $1 = 'streptomycin_630' ]; then
	R_primer=CAAGCAGAAGACGGCATACGAGATAAGCTAGTGACTGGAGTTCAGACGTGTGCTCTTCCGATC
fi
if [ $1 = 'streptomycin_mock' ]; then
	R_primer=CAAGCAGAAGACGGCATACGAGATCGTTTCACGTGACTGGAGTTCAGACGTGTGCTCTTCCGATC
fi
if [ $1 = 'conventional' ]; then
	R_primer=CAAGCAGAAGACGGCATACGAGATAAGGCCACGTGACTGGAGTTCAGACGTGTGCTCTTCCGATC
fi
if [ $1 = 'germfree' ]; then
	R_primer=CAAGCAGAAGACGGCATACGAGATATCCACTCGTGACTGGAGTTCAGACGTGTGCTCTTCCGATC
fi

trimming_job_id=$(qsub -v sample_name=$1,forward=$F_primer,reverse=$R_primer -W depend=afterok:$pool_job_id /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/pbs/trimming.pbs | sed 's/\..*$//')
echo $1 quality trimming: $trimming_job_id

filter_job_id=$(qsub -v sample_name=$1 -W depend=afterok:$trimming_job_id /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/pbs/filter.pbs | sed 's/\..*$//')
echo $1 filtering reads: $filter_job_id

echo

#-------------------------------------------------------------------------------------------------------------------------#

# 1. Pool raw read files from the same sample

# Unzip and pool the right reads
gunzip *.gz
cat *_L00*_R1_*.fastq > ${sample_name}.read1.pool.fastq
cat *_L00*_R2_*.fastq > ${sample_name}.read2.pool.fastq
gzip *_L00*.fastq

# Record some statistics about the initial reads
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read1.pool.fastq > ${sample_name}.pooling.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read2.pool.fastq >> ${sample_name}.pooling.summary


#-------------------------------------------------------------------------------------------------------------------------#

# 4. Quality trim the data

# Cut residual Illumina adapters
python2.7 /mnt/EXT/Schloss-data/bin/cutadapt-1.9.1/bin/cutadapt --error-rate=0.1 --overlap=10 -a ${forward} -A ${reverse} -o ${sample_name}.read1.pool.cut.fastq -p ${sample_name}.read2.pool.cut.fastq ${sample_name}.read1.pool.fastq ${sample_name}.read2.pool.fastq
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read1.pool.cut.fastq > ${sample_name}.trimming.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read2.pool.cut.fastq >> ${sample_name}.trimming.summary

# Quality trim the reads based on quality scores
/home/mljenior/bin/sickle/sickle pe -f ${sample_name}.read1.pool.cut.fastq -r ${sample_name}.read2.pool.cut.fastq -t sanger -o ${sample_name}.read1.pool.cut.trim.fastq -p ${sample_name}.read2.pool.cut.trim.fastq -s ${sample_name}.orphan.pool.cut.trim.fastq -q 30 -l 21

# Convert fastqs to fasta files
awk '{print ">" substr($0,2);getline;print;getline;getline}' ${sample_name}.read1.pool.cut.trim.fastq > ${sample_name}.read1.pool.cut.trim.fasta
awk '{print ">" substr($0,2);getline;print;getline;getline}' ${sample_name}.read2.pool.cut.trim.fastq > ${sample_name}.read2.pool.cut.trim.fasta
awk '{print ">" substr($0,2);getline;print;getline;getline}' ${sample_name}.orphan.pool.cut.trim.fastq > ${sample_name}.orphan.pool.cut.trim.fasta

# Record stats about the rest of the trimming
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read1.pool.cut.trim.fasta >> ${sample_name}.trimming.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read2.pool.cut.trim.fasta >> ${sample_name}.trimming.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.orphan.pool.cut.trim.fasta >> ${sample_name}.trimming.summary

#-------------------------------------------------------------------------------------------------------------------------#

# 5. Filter out contaminant reads and bin C. difficile reads to another files for separate analysis

# Remove contaminating bacterial rRNA sequences
/home/mljenior/bin/bowtie/bowtie /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/silva/silva_db -f -p 4 -1 ${sample_name}.read1.pool.cut.trim.fasta -2 ${sample_name}.read2.pool.cut.trim.fasta --un ${sample_name}.filter.read.fasta
mv ${sample_name}.filtered.read_1.fasta ${sample_name}.read1.pool.cut.trim.filt1.fasta
mv ${sample_name}.filtered.read_2.fasta ${sample_name}.read2.pool.cut.trim.filt1.fasta
/home/mljenior/bin/bowtie/bowtie /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/silva/silva_db -f -p 4 ${sample_name}.orphan.pool.cut.trim.fasta --un ${sample_name}.orphan.pool.cut.trim.filt1.fasta
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read1.pool.cut.trim.filt1.fasta > ${sample_name}.filtering.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read2.pool.cut.trim.filt1.fasta >> ${sample_name}.filtering.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.orphan.pool.cut.trim.filt1.fasta >> ${sample_name}.filtering.summary

# Remove residual Mus musculus (mouse) exome sequences
/home/mljenior/bin/bowtie/bowtie /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/mus_musculus/mus_db -f -p 4 -1 ${sample_name}.read1.pool.cut.trim.filt1.fasta -2 ${sample_name}.read2.pool.cut.trim.filt1.fasta --un ${sample_name}.filtered.read.fasta
mv ${sample_name}.filtered.read_1.fasta ${sample_name}.read1.pool.cut.trim.filt1.filt2.fasta
mv ${sample_name}.filtered.read_2.fasta ${sample_name}.read2.pool.cut.trim.filt1.filt2.fasta
/home/mljenior/bin/bowtie/bowtie /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/mus_musculus/mus_db -f -p 4 ${sample_name}.orphan.pool.cut.trim.filt1.fasta --un ${sample_name}.orphan.pool.cut.trim.filt1.filt2.fasta
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read1.pool.cut.trim.filt1.filt2.fasta >> ${sample_name}.filtering.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read2.pool.cut.trim.filt1.filt2.fasta >> ${sample_name}.filtering.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.orphan.pool.cut.trim.filt1.filt2.fasta >> ${sample_name}.filtering.summary

# Remove C. difficile 630 sequences, bin C. diff sequences into a new file
/home/mljenior/bin/bowtie/bowtie /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/cdf/cdf_db -f -p 4 -1 ${sample_name}.read1.pool.cut.trim.filt1.filt2.fasta -2 ${sample_name}.read2.pool.cut.trim.filt1.filt2.fasta ${reads}.aligned.paired.transcripts2cdf630.sam --un ${sample_name}.filtered.read.fasta
mv ${sample_name}.filtered.read_1.fasta ${sample_name}.read1.pool.cut.trim.filter.fasta
mv ${sample_name}.filtered.read_2.fasta ${sample_name}.read2.pool.cut.trim.filter.fasta
/home/mljenior/bin/bowtie/bowtie /mnt/EXT/Schloss-data/matt/metatranscriptomes_HiSeq/cdf/cdf_db -f -p 4 ${sample_name}.orphan.pool.cut.trim.filt1.fasta ${reads}.aligned.orphan.transcripts2cdf630.sam --un ${sample_name}.orphan.pool.cut.trim.filt1.filt2.fasta
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read1.pool.cut.trim.filter.fasta >> ${sample_name}.filtering.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.read2.pool.cut.trim.filter.fasta >> ${sample_name}.filtering.summary
python /mnt/EXT/Schloss-data/bin/seq_stats.py ${sample_name}.orphan.pool.cut.trim.filter.fasta >> ${sample_name}.filtering.summary

# Cleanup
rm *.filt1.fasta *.filt2.fasta *.trim.fasta

# Format alignment to C. difficile
samtools view -bS ${sample_name}.aligned.paired.transcripts2cdf630.sam > ${sample_name}.aligned.paired.transcripts2cdf630.bam
samtools sort ${sample_name}.aligned.paired.transcripts2cdf630.bam ${sample_name}.aligned.paired.transcripts2cdf630.sorted
samtools view -bS ${sample_name}.aligned.orphan.transcripts2cdf630.sam > ${sample_name}.aligned.orphan.transcripts2cdf630.bam
samtools sort ${sample_name}.aligned.orphan.transcripts2cdf630.bam ${sample_name}.aligned.orphan.transcripts2cdf630.sorted

samtools merge ${sample_name}.aligned.transcripts2cdf630.sorted.merge.bam ${sample_name}.aligned.paired.transcripts2cdf630.sorted.bam ${sample_name}.aligned.orphan.transcripts2cdf630.sorted.bam
samtools index ${sample_name}.aligned.transcripts2cdf630.sorted.merge.bam
samtools idxstats ${sample_name}.aligned.transcripts2cdf630.sorted.merge.bam > ${sample_name}.mapped2cdf630.txt

rm ${sample_name}.aligned.paired.transcripts2cdf630.sam ${sample_name}.aligned.orphan.transcripts2cdf630.sam

/home/mljenior/scripts/idxstats/pool_unmapped_idxstats.py ${sample_name}.mapped2cdf630.txt
/home/mljenior/scripts/idxstats/normalize_idxstats.py ${sample_name}.mapped2cdf630.pool.txt
/home/mljenior/scripts/idxstats/count_idxstats.py input_file ${sample_name}.mapped2cdf630.pool.norm.txt

#-------------------------------------------------------------------------------------------------------------------------#

# 6. Map reads to their corresponding metagenome

/home/mljenior/bin/bowtie2/bowtie2 -f --fr -x ${metagenome}_metaG_db -1 ${metatranscriptome}.read1.pool.cut.trim.filter.fasta -2 ${metatranscriptome}.read2.pool.cut.trim.filter.fasta -S ${metatranscriptome}.pair.transcripts2metaG.sam
samtools view -bS ${metatranscriptome}.pair.transcripts2metaG.sam > ${metatranscriptome}.pair.transcripts2metaG.bam
rm ${metatranscriptome}.pair.transcripts2metaG.sam
samtools sort ${metatranscriptome}.pair.transcripts2metaG.bam ${metatranscriptome}.pair.transcripts2metaG.sorted

/home/mljenior/bin/bowtie2/bowtie2 -f -x ${metagenome}_metaG_db -U ${metatranscriptome}.orphan.pool.cut.trim.filter.fasta -S ${metatranscriptome}.orphan.transcripts2metaG.sam
samtools view -bS ${metatranscriptome}.orphan.transcripts2metaG.sam > ${metatranscriptome}.orphan.transcripts2metaG.bam
samtools sort ${metatranscriptome}.orphan.transcripts2metaG.bam ${metatranscriptome}.orphan.transcripts2metaG.sorted

samtools merge ${metatranscriptome}.transcripts2metaG.sorted.merge.bam ${metatranscriptome}.pair.transcripts2metaG.sorted.bam ${metatranscriptome}.orphan.transcripts2metaG.sorted.bam
samtools index ${metatranscriptome}.transcripts2metaG.sorted.merge.bam
samtools idxstats ${metatranscriptome}.transcripts2metaG.sorted.merge.bam > ${metatranscriptome}.mapped2metaG.txt

/home/mljenior/scripts/idxstats/pool_unmapped_idxstats.py ${metatranscriptome}.mapped2metaG.txt
/home/mljenior/scripts/idxstats/normalize_idxstats.py ${metatranscriptome}.reads2metaG.pool.txt
/home/mljenior/scripts/idxstats/count_idxstats.py input_file ${metatranscriptome}.reads2metaG.pool.norm.txt

#-------------------------------------------------------------------------------------------------------------------------#


# 7. Extra

Making diamond blast db

metagenomic bowtie2 dbs













