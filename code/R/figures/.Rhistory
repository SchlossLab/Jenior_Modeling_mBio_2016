prd <- rbind(subset(combined_mapping, grepl('prd.;', combined_mapping$gene)),
subset(combined_mapping, grepl('prd;', combined_mapping$gene))) # proline fermentation
grd <- rbind(subset(combined_mapping, grepl('grd.;', combined_mapping$gene)),
subset(combined_mapping, grepl('grd;', combined_mapping$gene))) # glycine fermentation
kamA <- subset(combined_mapping, grepl('kam.;', combined_mapping$gene)) # lycine fermentation
ldhA <- subset(combined_mapping, grepl('ldhA;', combined_mapping$gene)) # (R)-2-hydroxyisocaproate dehydrogenase (leucine degradation)
had <- subset(combined_mapping, grepl('had.;', combined_mapping$gene)) # Leucine fermentation
tdcB <- subset(combined_mapping, grepl('tdcB;', combined_mapping$gene)) # threonine dehydratase
fdh <- subset(combined_mapping, grepl('fdh.;', combined_mapping$gene)) # Formate dehydrogenase
panB  <- subset(combined_mapping, grepl('panB;', combined_mapping$gene)) # Butanoate formation
arg <- subset(combined_mapping, grepl('arg.;', combined_mapping$gene)) # arginine deaminase operon
serA <- subset(combined_mapping, grepl('serA;', combined_mapping$gene)) # D-3-phosphoglycerate dehydrogenase (serine catabolism)
sdaB <- subset(combined_mapping, grepl('sdaB;', combined_mapping$gene)) # L-serine dehydratase (serine catabolism)
stickland <- rbind(pep, prd, grd, ldhA, had, tdcB, fdh, panB, arg, serA, sdaB, kamA)
stickland$grouping <- rep('Stickland reactions', nrow(stickland))
# Monosaccharide catabolism
gap <- subset(combined_mapping, grepl('gap.;', combined_mapping$gene)) # Glyceraldehyde 3-phosphate dehydrogenase (Glycolysis)
gpmI <- subset(combined_mapping, grepl('gpmI;', combined_mapping$gene)) # Phosphoglyceromutase (Glycolysis)
pfk <- rbind(subset(combined_mapping, grepl('pfkA;', combined_mapping$gene)),
subset(combined_mapping, grepl('phosphofructokinase', combined_mapping$gene)))# Phosphofructokinase (Glycolysis)
tpi <- subset(combined_mapping, grepl('tpi;', combined_mapping$gene)) # Triosephosphate isomerase (Glycolysis)
pyk <- subset(combined_mapping, grepl('pyk;', combined_mapping$gene)) # Pyruvate kinase (Glycolysis)
eno <- subset(combined_mapping, grepl('eno;', combined_mapping$gene)) # Enolase (Glycolysis)
pgm <- rbind(subset(combined_mapping, grepl('pgm;', combined_mapping$gene)),
subset(combined_mapping, grepl('phosphoglycerate_mutase', combined_mapping$gene))) # Phosphoglycerate mutase (Glycolysis)
glycolysis <- rbind(gap, gpmI, pfk, tpi, pyk, eno, pgm)
galactose <- rbind(subset(combined_mapping, grepl('galE;', combined_mapping$gene)),
subset(combined_mapping, grepl('galactose-1-phosphate_uridylyltransferase', combined_mapping$gene))) # hexose
mannose <- rbind(subset(combined_mapping, grepl('mng.;', combined_mapping$gene)),
subset(combined_mapping, grepl('man.;', combined_mapping$gene)),
subset(combined_mapping, grepl('pmi;', combined_mapping$gene)))# hexose
tagatose <- subset(combined_mapping, grepl('tagatose', combined_mapping$gene)) # hexose
fructose <- rbind(subset(combined_mapping, grepl('fbp;', combined_mapping$gene)),
subset(combined_mapping, grepl('fru;', combined_mapping$gene)),
subset(combined_mapping, grepl('fru.;', combined_mapping$gene)),
subset(combined_mapping, grepl('fru...;', combined_mapping$gene)),
subset(combined_mapping, grepl('fba;', combined_mapping$gene))) # hexose
xylose <- subset(combined_mapping, grepl('xylose', combined_mapping$gene)) # pentose
monosaccharides <- rbind(gap, gpmI, pfk, tpi, pyk, eno, pgm, galactose, mannose, tagatose, fructose, xylose)
monosaccharides$grouping <- rep('Monosaccharide catabolism', nrow(monosaccharides))
# Polysaccharide catabolism
sucrose <- subset(combined_mapping, grepl('scr.;', combined_mapping$gene))
maltose <- rbind(subset(combined_mapping, grepl('maltose-6\'-phosphate_glucosidase', combined_mapping$gene)),
subset(combined_mapping, grepl('maa;', combined_mapping$gene)),
subset(combined_mapping, grepl('map.;', combined_mapping$gene)),
subset(combined_mapping, grepl('maltose_O-acetyltransferase', combined_mapping$gene)))
tre <- subset(combined_mapping, grepl('tre.;', combined_mapping$gene)) # Trehalose utilization operon
glucosidase <- subset(combined_mapping, grepl('glucosidase', combined_mapping$gene))
cel <- rbind(subset(combined_mapping, grepl('celG;', combined_mapping$gene)),
subset(combined_mapping, grepl('celC;', combined_mapping$gene)))
polysaccharides <- rbind(sucrose, maltose, tre, glucosidase, cel)
polysaccharides$grouping <- rep('Polysaccharide catabolism', nrow(polysaccharides))
# PTS systems
PTS <- rbind(subset(combined_mapping, grepl('PTS_system', combined_mapping$gene)),
subset(combined_mapping, grepl('pyridoxal_phosphate-dependent_transferase', combined_mapping$gene)))
PTS$grouping <- rep('PEP group translocators', nrow(PTS))
# ABC transporters
ABC <- subset(combined_mapping, grepl('ABC_transporter_sugar', combined_mapping$gene))
ABC$grouping <- rep('ABC sugar transporters', nrow(ABC))
# sugar alcohols
srl <- subset(combined_mapping, grepl('srl.;', combined_mapping$gene)) # sorbitol utilization locus
srlE <- subset(combined_mapping, grepl('srlE.;', combined_mapping$gene)) # sorbitol import
mtl <- subset(combined_mapping, grepl('mtl.;', combined_mapping$gene)) # mannitol utilization locus
sugar_alcohols <- rbind(srl, srlE, mtl)
sugar_alcohols$grouping <- rep('Sugar alcohol catabolism', nrow(sugar_alcohols))
# Fermentation genes
buk <- rbind(subset(combined_mapping, grepl('buk;', combined_mapping$gene)),
subset(combined_mapping, grepl('buk.;', combined_mapping$gene))) # Butyrate kinase
ptb <- rbind(subset(combined_mapping, grepl('ptb;', combined_mapping$gene)),
subset(combined_mapping, grepl('ptb.;', combined_mapping$gene))) # phosphate butyryltransferase
acetate <- subset(combined_mapping, grepl('acetate', combined_mapping$gene))
valerate <- subset(combined_mapping, grepl('valerate', combined_mapping$gene))
sucD <- subset(combined_mapping, grepl('sucD;', combined_mapping$gene)) # succinate-semialdehyde dehydrogenase
adh <- subset(combined_mapping, grepl('adh.;', combined_mapping$gene)) # Alcohol dehydrogenase
cat <- subset(combined_mapping, grepl('cat.;', combined_mapping$gene)) # Acetate to butyrate conversion
abfD <- subset(combined_mapping, grepl('abfD;', combined_mapping$gene)) # gamma-aminobutyrate metabolism dehydratase
hbd <- subset(combined_mapping, grepl('hbd;', combined_mapping$gene)) # 3-hydroxybutyryl-CoA dehydrogenase
fermentation <- rbind(buk, ptb, acetate, valerate, sucD, adh, cat, abfD, hbd)
fermentation$grouping <- rep('Fermentation end steps', nrow(fermentation))
# Combine genes to for supplementary table
gene_table <- rbind(amino_sugars, stickland, monosaccharides, polysaccharides, ABC, PTS, sugar_alcohols, fermentation)
gene_table$KEGG_code <- rownames(gene_table)
colnames(gene_table)[1] <- 'Cefoperazone_relabund'
colnames(gene_table)[2] <- 'Clindamycin_relabund'
colnames(gene_table)[3] <- 'Streptomycin_relabund'
View(gene_table)
gene_groupings <- gene_table$grouping
names(gene_groupings) <- rownames(gene_table)
anosim(expression_dist, grouping=gene_groupings, permutations=1000, distance='bray')
gene_groupings
levels(gene_groupings)
gene_groupings <- rownames(gene_table)
View(gene_table)
gene_groupings <- rownames(gene_table)
levels(gene_groupings) <- gene_table$grouping
names(gene_groupings) <- gene_table$grouping
anosim(expression_dist, grouping=gene_groupings, permutations=1000, distance='bray')
View(gene_table)
gene_table$grouping
gene_groupings <- rownames(gene_table)
levels(gene_groupings) <- gene_table$grouping
anosim(expression_dist, grouping=gene_groupings, permutations=1000, distance='bray')
gene_groupings <- factor(x=rownames(gene_table), levels=gene_table$grouping)
gene_groupings
rownames(gene_table)
length(rownames(gene_table))
length(unique(rownames(gene_table)))
gene_groupings <- factor(x=rownames(gene_table), levels=gene_table$grouping)
rownames(gene_table)
View(sdaB)
deps <- c('vegan', 'klaR', 'wesanderson');
for (dep in deps){
if (dep %in% installed.packages()[,"Package"] == FALSE){
install.packages(as.character(dep), quiet=TRUE);
}
library(dep, verbose=FALSE, character.only=TRUE)
}
# Define and check color palette
palette_plot <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
# Define input file names
cefoperazone_file <- '~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/mapping/cdifficile630/all_genes/cefoperazone_630.RNA_reads2cdf630.norm.annotated.txt'
clindamycin_file <- '~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/mapping/cdifficile630/all_genes/clindamycin_630.RNA_reads2cdf630.norm.annotated.txt'
streptomycin_file <- '~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/mapping/cdifficile630/all_genes/streptomycin_630.RNA_reads2cdf630.norm.annotated.txt'
# Load in data
cefoperazone <- read.delim(cefoperazone_file, sep='\t', header=FALSE, row.names=1)
colnames(cefoperazone) <- c('Cefoperazone', 'ko', 'gene', 'pathway')
clindamycin <- read.delim(clindamycin_file, sep='\t', header=FALSE, row.names=1)
colnames(clindamycin) <- c('Clindamycin', 'ko', 'gene', 'pathway')
streptomycin <- read.delim(streptomycin_file, sep='\t', header=FALSE, row.names=1)
colnames(streptomycin) <- c('Streptomycin', 'ko', 'gene', 'pathway')
#-------------------------------------------------------------------------------------------------------------------------#
# Format data for merging
cefoperazone$ko <- NULL
cefoperazone$gene <- NULL
cefoperazone$pathway <- NULL
clindamycin$ko <- NULL
clindamycin$gene <- NULL
clindamycin$pathway <- NULL
# Merge tables
combined_mapping <- merge(cefoperazone, clindamycin, by='row.names')
rownames(combined_mapping) <- combined_mapping$Row.names
combined_mapping$Row.names <- NULL
combined_mapping <- merge(combined_mapping, streptomycin, by='row.names')
rownames(combined_mapping) <- combined_mapping$Row.names
combined_mapping$Row.names <- NULL
# Rarefy mappings to be equal within sequencing type
sub_size <- round(min(colSums(combined_mapping[,1:3])) * 0.9) # 97930
cefoperazone <- t(rrarefy(combined_mapping$Cefoperazone, sample=sub_size))
clindamycin <- t(rrarefy(combined_mapping$Clindamycin, sample=sub_size))
streptomycin <- t(rrarefy(combined_mapping$Streptomycin, sample=sub_size))
#for (index in 1:999) {
#  cefoperazone <- cbind(cefoperazone, t(rrarefy(combined_mapping$Cefoperazone, sample=sub_size)))
#  clindamycin <- cbind(clindamycin, t(rrarefy(combined_mapping$Clindamycin, sample=sub_size)))
#  streptomycin <- cbind(streptomycin, t(rrarefy(combined_mapping$Streptomycin, sample=sub_size)))
#}
# Medians
#combined_mapping$Cefoperazone <- rowMedians(cefoperazone)
#combined_mapping$Clindamycin <- rowMedians(clindamycin)
#combined_mapping$Streptomycin <- rowMedians(streptomycin)
#rm(cefoperazone, clindamycin, streptomycin, index)
combined_mapping$Cefoperazone <- cefoperazone
combined_mapping$Clindamycin <- clindamycin
combined_mapping$Streptomycin <- streptomycin
rm(cefoperazone, clindamycin, streptomycin)
# Eliminate genes with no transcripts mapping
combined_mapping <- combined_mapping[rowSums(combined_mapping[,1:3]) != 0.0, ]
# Convert each gene into a relative abundance of expression between treatments
combined_mapping[,1:3] <- combined_mapping[, 1:3] / rowSums(combined_mapping[,1:3])
# Free up memory
rm(cefoperazone_file, clindamycin_file, streptomycin_file)
rm(cefoperazone, clindamycin, streptomycin)
#----------------------------------------------------------------------------------------------------------------------------#
# Subset by gene annotations
# Amino sugar catabolism
mur <- rbind(subset(combined_mapping, grepl('mur.;', combined_mapping$gene)),
subset(combined_mapping, grepl('mur;', combined_mapping$gene))) # Muramidase
nag <- rbind(subset(combined_mapping, grepl('nag.;', combined_mapping$gene)),
subset(combined_mapping, grepl('nag;', combined_mapping$gene))) # Acetylglucosaminidase
acd <- rbind(subset(combined_mapping, grepl('acd.;', combined_mapping$gene)),
subset(combined_mapping, grepl('acd;', combined_mapping$gene))) # Peptidoglycan hydrolase
ldt <- rbind(subset(combined_mapping, grepl('ldt.;', combined_mapping$gene)),
subset(combined_mapping, grepl('ldt;', combined_mapping$gene))) # l,d-transpeptidase
gne <- rbind(subset(combined_mapping, grepl('gne.;', combined_mapping$gene)),
subset(combined_mapping, grepl('gne;', combined_mapping$gene))) # Glucosamine (UDP-N-Acetyl)-2-Epimerase/N-Acetylmannosamine Kinase
nan <- rbind(subset(combined_mapping, grepl('nan.;', combined_mapping$gene)),
subset(combined_mapping, grepl('nan;', combined_mapping$gene))) # Sialidase
glm <- rbind(subset(combined_mapping, grepl('glm.;', combined_mapping$gene)),
subset(combined_mapping, grepl('glm;', combined_mapping$gene))) # Glutamate mutase
amino_sugars <- rbind(mur, nag, acd, ldt, gne, nan, glm)
rm(mur, nag, acd, ldt, gne, nan, glm)
amino_sugars$grouping <- rep('Amino sugar catabolism', nrow(amino_sugars))
# Stickland fermentation (amino acid catabolism)
pep <- rbind(subset(combined_mapping, grepl('pep.;', combined_mapping$gene)),
subset(combined_mapping, grepl('pep;', combined_mapping$gene))) # general peptidases
prd <- rbind(subset(combined_mapping, grepl('prd.;', combined_mapping$gene)),
subset(combined_mapping, grepl('prd;', combined_mapping$gene))) # proline fermentation
grd <- rbind(subset(combined_mapping, grepl('grd.;', combined_mapping$gene)),
subset(combined_mapping, grepl('grd;', combined_mapping$gene))) # glycine fermentation
kamA <- subset(combined_mapping, grepl('kam.;', combined_mapping$gene)) # lycine fermentation
ldhA <- subset(combined_mapping, grepl('ldhA;', combined_mapping$gene)) # (R)-2-hydroxyisocaproate dehydrogenase (leucine degradation)
had <- subset(combined_mapping, grepl('had.;', combined_mapping$gene)) # Leucine fermentation
tdcB <- subset(combined_mapping, grepl('tdcB;', combined_mapping$gene)) # threonine dehydratase
fdh <- subset(combined_mapping, grepl('fdh.;', combined_mapping$gene)) # Formate dehydrogenase
panB  <- subset(combined_mapping, grepl('panB;', combined_mapping$gene)) # Butanoate formation
arg <- subset(combined_mapping, grepl('arg.;', combined_mapping$gene)) # arginine deaminase operon
serA <- subset(combined_mapping, grepl('serA;', combined_mapping$gene)) # D-3-phosphoglycerate dehydrogenase (serine catabolism)
sdaB <- subset(combined_mapping, grepl('sdaB;', combined_mapping$gene)) # L-serine dehydratase (serine catabolism)
stickland <- rbind(pep, prd, grd, ldhA, had, tdcB, fdh, panB, arg, serA, sdaB, kamA)
rm(pep, prd, grd, ldhA, had, tdcB, fdh, panB, arg, serA, sdaB, kamA)
stickland$grouping <- rep('Stickland reactions', nrow(stickland))
# Monosaccharide catabolism
gap <- subset(combined_mapping, grepl('gap.;', combined_mapping$gene)) # Glyceraldehyde 3-phosphate dehydrogenase (Glycolysis)
gpmI <- subset(combined_mapping, grepl('gpmI;', combined_mapping$gene)) # Phosphoglyceromutase (Glycolysis)
pfk <- rbind(subset(combined_mapping, grepl('pfkA;', combined_mapping$gene)),
subset(combined_mapping, grepl('phosphofructokinase', combined_mapping$gene)))# Phosphofructokinase (Glycolysis)
tpi <- subset(combined_mapping, grepl('tpi;', combined_mapping$gene)) # Triosephosphate isomerase (Glycolysis)
pyk <- subset(combined_mapping, grepl('pyk;', combined_mapping$gene)) # Pyruvate kinase (Glycolysis)
eno <- subset(combined_mapping, grepl('eno;', combined_mapping$gene)) # Enolase (Glycolysis)
pgm <- rbind(subset(combined_mapping, grepl('pgm;', combined_mapping$gene)),
subset(combined_mapping, grepl('phosphoglycerate_mutase', combined_mapping$gene))) # Phosphoglycerate mutase (Glycolysis)
glycolysis <- rbind(gap, gpmI, pfk, tpi, pyk, eno, pgm)
galactose <- rbind(subset(combined_mapping, grepl('galE;', combined_mapping$gene)),
subset(combined_mapping, grepl('galactose-1-phosphate_uridylyltransferase', combined_mapping$gene))) # hexose
mannose <- rbind(subset(combined_mapping, grepl('mng.;', combined_mapping$gene)),
subset(combined_mapping, grepl('man.;', combined_mapping$gene)),
subset(combined_mapping, grepl('pmi;', combined_mapping$gene)))# hexose
tagatose <- subset(combined_mapping, grepl('tagatose', combined_mapping$gene)) # hexose
fructose <- rbind(subset(combined_mapping, grepl('fbp;', combined_mapping$gene)),
subset(combined_mapping, grepl('fru;', combined_mapping$gene)),
subset(combined_mapping, grepl('fru.;', combined_mapping$gene)),
subset(combined_mapping, grepl('fru...;', combined_mapping$gene)),
subset(combined_mapping, grepl('fba;', combined_mapping$gene))) # hexose
xylose <- subset(combined_mapping, grepl('xylose', combined_mapping$gene)) # pentose
monosaccharides <- rbind(gap, gpmI, pfk, tpi, pyk, eno, pgm, galactose, mannose, tagatose, fructose, xylose)
rm(gap, gpmI, pfk, tpi, pyk, eno, pgm, galactose, mannose, tagatose, fructose, xylose)
monosaccharides$grouping <- rep('Monosaccharide catabolism', nrow(monosaccharides))
# Polysaccharide catabolism
sucrose <- subset(combined_mapping, grepl('scr.;', combined_mapping$gene))
maltose <- rbind(subset(combined_mapping, grepl('maltose-6\'-phosphate_glucosidase', combined_mapping$gene)),
subset(combined_mapping, grepl('maa;', combined_mapping$gene)),
subset(combined_mapping, grepl('map.;', combined_mapping$gene)),
subset(combined_mapping, grepl('maltose_O-acetyltransferase', combined_mapping$gene)))
tre <- subset(combined_mapping, grepl('tre.;', combined_mapping$gene)) # Trehalose utilization operon
glucosidase <- subset(combined_mapping, grepl('glucosidase', combined_mapping$gene))
cel <- rbind(subset(combined_mapping, grepl('celG;', combined_mapping$gene)),
subset(combined_mapping, grepl('celC;', combined_mapping$gene)))
polysaccharides <- rbind(sucrose, maltose, tre, glucosidase, cel)
polysaccharides$grouping <- rep('Polysaccharide catabolism', nrow(polysaccharides))
# PTS systems
PTS <- rbind(subset(combined_mapping, grepl('PTS_system', combined_mapping$gene)),
subset(combined_mapping, grepl('pyridoxal_phosphate-dependent_transferase', combined_mapping$gene)))
PTS$grouping <- rep('PEP group translocators', nrow(PTS))
# ABC transporters
ABC <- subset(combined_mapping, grepl('ABC_transporter_sugar', combined_mapping$gene))
ABC$grouping <- rep('ABC sugar transporters', nrow(ABC))
# sugar alcohols
srl <- subset(combined_mapping, grepl('srl.;', combined_mapping$gene)) # sorbitol utilization locus
srlE <- subset(combined_mapping, grepl('srlE.;', combined_mapping$gene)) # sorbitol import
mtl <- subset(combined_mapping, grepl('mtl.;', combined_mapping$gene)) # mannitol utilization locus
sugar_alcohols <- rbind(srl, srlE, mtl)
rm(srl, srlE, mtl)
sugar_alcohols$grouping <- rep('Sugar alcohol catabolism', nrow(sugar_alcohols))
# Fermentation genes
buk <- rbind(subset(combined_mapping, grepl('buk;', combined_mapping$gene)),
subset(combined_mapping, grepl('buk.;', combined_mapping$gene))) # Butyrate kinase
ptb <- rbind(subset(combined_mapping, grepl('ptb;', combined_mapping$gene)),
subset(combined_mapping, grepl('ptb.;', combined_mapping$gene))) # phosphate butyryltransferase
acetate <- subset(combined_mapping, grepl('acetate', combined_mapping$gene))
valerate <- subset(combined_mapping, grepl('valerate', combined_mapping$gene))
sucD <- subset(combined_mapping, grepl('sucD;', combined_mapping$gene)) # succinate-semialdehyde dehydrogenase
adh <- subset(combined_mapping, grepl('adh.;', combined_mapping$gene)) # Alcohol dehydrogenase
cat <- subset(combined_mapping, grepl('cat.;', combined_mapping$gene)) # Acetate to butyrate conversion
abfD <- subset(combined_mapping, grepl('abfD;', combined_mapping$gene)) # gamma-aminobutyrate metabolism dehydratase
hbd <- subset(combined_mapping, grepl('hbd;', combined_mapping$gene)) # 3-hydroxybutyryl-CoA dehydrogenase
fermentation <- rbind(buk, ptb, acetate, valerate, sucD, adh, cat, abfD, hbd)
rm(buk, ptb, acetate, valerate, sucD, adh, cat, abfD, hbd)
fermentation$grouping <- rep('Fermentation end steps', nrow(fermentation))
# Combine genes to for supplementary table
gene_table <- rbind(amino_sugars, stickland, monosaccharides, polysaccharides, ABC, PTS, sugar_alcohols, fermentation)
gene_table$KEGG_code <- rownames(gene_table)
colnames(gene_table)[1] <- 'Cefoperazone_relabund'
colnames(gene_table)[2] <- 'Clindamycin_relabund'
colnames(gene_table)[3] <- 'Streptomycin_relabund'
# Write table
table_file <- '~/Desktop/Repositories/Jenior_Transcriptomics_2015/results/supplement/tables/table_S2.tsv'
write.table(gene_table, file=table_file, sep='\t', row.names=FALSE, quote=FALSE)
rm(table_file)
rm(sucrose, maltose, tre, glucosidase, cel)
View(ABC)
amino_sugars[,1]
View(ABC)
amino_sugars[,c(4:6)] <- NULL
amino_sugars[,c(4,5,6)] <- NULL
amino_sugars[,4] <- NULL
View(ABC)
amino_sugars[,c('ko','gene','pathway') := NULL]
amino_sugars[,c('ko','gene','pathway') == NULL]
amino_sugars[,c('ko','gene','pathway') = NULL]
amino_sugars[,c('ko','gene','pathway') <- NULL]
amino_sugars$ko <- NULL
amino_sugars$gene <- NULL
amino_sugars$pathway <- NULL
stickland$ko <- NULL
stickland$gene <- NULL
stickland$pathway <- NULL
monosaccharides$ko <- NULL
monosaccharides$gene <- NULL
monosaccharides$pathway <- NULL
polysaccharides$ko <- NULL
polysaccharides$gene <- NULL
polysaccharides$pathway <- NULL
ABC$ko <- NULL
ABC$gene <- NULL
ABC$pathway <- NULL
PTS$ko <- NULL
PTS$gene <- NULL
PTS$pathway <- NULL
sugar_alcohols$ko <- NULL
sugar_alcohols$gene <- NULL
sugar_alcohols$pathway <- NULL
fermentation$ko <- NULL
fermentation$gene <- NULL
fermentation$pathway <- NULL
transport <- rbind(ABC, PTS)
View(transport)
gene_groupings <- combined_mapping
gene_groupings$ko <- NULL
gene_groupings$gene <- NULL
gene_groupings$pathway <- NULL
View(gene_groupings)
gene_groupings <- gene_table
gene_groupings$ko <- NULL
gene_groupings$gene <- NULL
gene_groupings$pathway <- NULL
View(gene_groupings)
gene_groupings$KEGG_code <- NULL
gene_groupings$Cefoperazone_relabund <- NULL
gene_groupings$Clindamycin_relabund <- NULL
gene_groupings$Streptomycin_relabund <- NULL
View(gene_groupings)
expression_dis <- vegdist(x=combined_mapping[,1:3], method='bray', binary=TRUE, diag=TRUE, upper=TRUE)
anosim(expression_dis, grouping=gene_groupings, permutations=1000, distance='bray')
transport <- rbind(ABC, PTS)
expression_dis <- vegdist(x=transport, method='bray', binary=TRUE, diag=TRUE, upper=TRUE)
expression_dis <- vegdist(x=transport[,1:3], method='bray', binary=TRUE, diag=TRUE, upper=TRUE)
View(transport)
anosim(expression_dis, grouping=grouping, permutations=1000, distance='bray')
anosim(expression_dis, grouping=transport$grouping, permutations=1000, distance='bray')
transport$grouping
summary(anosim(expression_dis, grouping=transport$grouping, permutations=1000, distance='bray'))
View(gene_table)
cefoperazone_file <- '~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/mapping/cdifficile630/all_genes/cefoperazone_630.RNA_reads2cdf630.norm.annotated.txt'
clindamycin_file <- '~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/mapping/cdifficile630/all_genes/clindamycin_630.RNA_reads2cdf630.norm.annotated.txt'
streptomycin_file <- '~/Desktop/Repositories/Jenior_Transcriptomics_2015/data/mapping/cdifficile630/all_genes/streptomycin_630.RNA_reads2cdf630.norm.annotated.txt'
# Load in data
cefoperazone <- read.delim(cefoperazone_file, sep='\t', header=FALSE, row.names=1)
colnames(cefoperazone) <- c('Cefoperazone', 'ko', 'gene', 'pathway')
clindamycin <- read.delim(clindamycin_file, sep='\t', header=FALSE, row.names=1)
colnames(clindamycin) <- c('Clindamycin', 'ko', 'gene', 'pathway')
streptomycin <- read.delim(streptomycin_file, sep='\t', header=FALSE, row.names=1)
colnames(streptomycin) <- c('Streptomycin', 'ko', 'gene', 'pathway')
#-------------------------------------------------------------------------------------------------------------------------#
# Format data for merging
cefoperazone$ko <- NULL
cefoperazone$gene <- NULL
cefoperazone$pathway <- NULL
clindamycin$ko <- NULL
clindamycin$gene <- NULL
clindamycin$pathway <- NULL
# Merge tables
combined_mapping <- merge(cefoperazone, clindamycin, by='row.names')
rownames(combined_mapping) <- combined_mapping$Row.names
combined_mapping$Row.names <- NULL
combined_mapping <- merge(combined_mapping, streptomycin, by='row.names')
rownames(combined_mapping) <- combined_mapping$Row.names
combined_mapping$Row.names <- NULL
# Rarefy mappings to be equal within sequencing type
sub_size <- round(min(colSums(combined_mapping[,1:3])) * 0.9) # 97930
cefoperazone_actual <- t(rrarefy(combined_mapping$Cefoperazone, sample=sub_size))
clindamycin_actual <- t(rrarefy(combined_mapping$Clindamycin, sample=sub_size))
streptomycin_actual <- t(rrarefy(combined_mapping$Streptomycin, sample=sub_size))
combined_mapping$Cefoperazone <- cefoperazone_actual
combined_mapping$Clindamycin <- clindamycin_actual
combined_mapping$Streptomycin <- streptomycin_actual
# Eliminate genes with no transcripts mapping
combined_mapping <- combined_mapping[rowSums(combined_mapping[,1:3]) != 0.0, ]
# Convert each gene into a relative abundance of expression between treatments
combined_mapping[,1:3] <- combined_mapping[, 1:3] / rowSums(combined_mapping[,1:3])
# Free up memory
rm(cefoperazone_file, clindamycin_file, streptomycin_file)
rm(cefoperazone, clindamycin, streptomycin)
#----------------------------------------------------------------------------------------------------------------------------#
# Subset by gene annotations
# Amino sugar catabolism
mur <- rbind(subset(combined_mapping, grepl('mur.;', combined_mapping$gene)),
subset(combined_mapping, grepl('mur;', combined_mapping$gene))) # Muramidase
nag <- rbind(subset(combined_mapping, grepl('nag.;', combined_mapping$gene)),
subset(combined_mapping, grepl('nag;', combined_mapping$gene))) # Acetylglucosaminidase
acd <- rbind(subset(combined_mapping, grepl('acd.;', combined_mapping$gene)),
subset(combined_mapping, grepl('acd;', combined_mapping$gene))) # Peptidoglycan hydrolase
ldt <- rbind(subset(combined_mapping, grepl('ldt.;', combined_mapping$gene)),
subset(combined_mapping, grepl('ldt;', combined_mapping$gene))) # l,d-transpeptidase
gne <- rbind(subset(combined_mapping, grepl('gne.;', combined_mapping$gene)),
subset(combined_mapping, grepl('gne;', combined_mapping$gene))) # Glucosamine (UDP-N-Acetyl)-2-Epimerase/N-Acetylmannosamine Kinase
nan <- rbind(subset(combined_mapping, grepl('nan.;', combined_mapping$gene)),
subset(combined_mapping, grepl('nan;', combined_mapping$gene))) # Sialidase
glm <- rbind(subset(combined_mapping, grepl('glm.;', combined_mapping$gene)),
subset(combined_mapping, grepl('glm;', combined_mapping$gene))) # Glutamate mutase
amino_sugars <- rbind(mur, nag, acd, ldt, gne, nan, glm)
rm(mur, nag, acd, ldt, gne, nan, glm)
amino_sugars$grouping <- rep('Amino sugar catabolism', nrow(amino_sugars))
# Stickland fermentation (amino acid catabolism)
pep <- rbind(subset(combined_mapping, grepl('pep.;', combined_mapping$gene)),
subset(combined_mapping, grepl('pep;', combined_mapping$gene))) # general peptidases
prd <- rbind(subset(combined_mapping, grepl('prd.;', combined_mapping$gene)),
subset(combined_mapping, grepl('prd;', combined_mapping$gene))) # proline fermentation
grd <- rbind(subset(combined_mapping, grepl('grd.;', combined_mapping$gene)),
subset(combined_mapping, grepl('grd;', combined_mapping$gene))) # glycine fermentation
kamA <- subset(combined_mapping, grepl('kam.;', combined_mapping$gene)) # lycine fermentation
ldhA <- subset(combined_mapping, grepl('ldhA;', combined_mapping$gene)) # (R)-2-hydroxyisocaproate dehydrogenase (leucine degradation)
had <- subset(combined_mapping, grepl('had.;', combined_mapping$gene)) # Leucine fermentation
tdcB <- subset(combined_mapping, grepl('tdcB;', combined_mapping$gene)) # threonine dehydratase
fdh <- subset(combined_mapping, grepl('fdh.;', combined_mapping$gene)) # Formate dehydrogenase
panB  <- subset(combined_mapping, grepl('panB;', combined_mapping$gene)) # Butanoate formation
arg <- subset(combined_mapping, grepl('arg.;', combined_mapping$gene)) # arginine deaminase operon
serA <- subset(combined_mapping, grepl('serA;', combined_mapping$gene)) # D-3-phosphoglycerate dehydrogenase (serine catabolism)
sdaB <- subset(combined_mapping, grepl('sdaB;', combined_mapping$gene)) # L-serine dehydratase (serine catabolism)
stickland <- rbind(pep, prd, grd, ldhA, had, tdcB, fdh, panB, arg, serA, sdaB, kamA)
rm(pep, prd, grd, ldhA, had, tdcB, fdh, panB, arg, serA, sdaB, kamA)
stickland$grouping <- rep('Stickland reactions', nrow(stickland))
# Monosaccharide catabolism
gap <- subset(combined_mapping, grepl('gap.;', combined_mapping$gene)) # Glyceraldehyde 3-phosphate dehydrogenase (Glycolysis)
gpmI <- subset(combined_mapping, grepl('gpmI;', combined_mapping$gene)) # Phosphoglyceromutase (Glycolysis)
pfk <- rbind(subset(combined_mapping, grepl('pfkA;', combined_mapping$gene)),
subset(combined_mapping, grepl('phosphofructokinase', combined_mapping$gene)))# Phosphofructokinase (Glycolysis)
tpi <- subset(combined_mapping, grepl('tpi;', combined_mapping$gene)) # Triosephosphate isomerase (Glycolysis)
pyk <- subset(combined_mapping, grepl('pyk;', combined_mapping$gene)) # Pyruvate kinase (Glycolysis)
eno <- subset(combined_mapping, grepl('eno;', combined_mapping$gene)) # Enolase (Glycolysis)
pgm <- rbind(subset(combined_mapping, grepl('pgm;', combined_mapping$gene)),
subset(combined_mapping, grepl('phosphoglycerate_mutase', combined_mapping$gene))) # Phosphoglycerate mutase (Glycolysis)
galactose <- rbind(subset(combined_mapping, grepl('galE;', combined_mapping$gene)),
subset(combined_mapping, grepl('galactose-1-phosphate_uridylyltransferase', combined_mapping$gene))) # hexose
mannose <- rbind(subset(combined_mapping, grepl('mng.;', combined_mapping$gene)),
subset(combined_mapping, grepl('man.;', combined_mapping$gene)),
subset(combined_mapping, grepl('pmi;', combined_mapping$gene)))# hexose
tagatose <- subset(combined_mapping, grepl('tagatose', combined_mapping$gene)) # hexose
fructose <- rbind(subset(combined_mapping, grepl('fbp;', combined_mapping$gene)),
subset(combined_mapping, grepl('fru;', combined_mapping$gene)),
subset(combined_mapping, grepl('fru.;', combined_mapping$gene)),
subset(combined_mapping, grepl('fru...;', combined_mapping$gene)),
subset(combined_mapping, grepl('fba;', combined_mapping$gene))) # hexose
xylose <- subset(combined_mapping, grepl('xylose', combined_mapping$gene)) # pentose
monosaccharides <- rbind(gap, gpmI, pfk, tpi, pyk, eno, pgm, galactose, mannose, tagatose, fructose, xylose)
rm(gap, gpmI, pfk, tpi, pyk, eno, pgm, galactose, mannose, tagatose, fructose, xylose)
monosaccharides$grouping <- rep('Monosaccharide catabolism', nrow(monosaccharides))
# Polysaccharide catabolism
sucrose <- subset(combined_mapping, grepl('scr.;', combined_mapping$gene))
maltose <- rbind(subset(combined_mapping, grepl('maltose-6\'-phosphate_glucosidase', combined_mapping$gene)),
subset(combined_mapping, grepl('maa;', combined_mapping$gene)),
subset(combined_mapping, grepl('map.;', combined_mapping$gene)),
subset(combined_mapping, grepl('maltose_O-acetyltransferase', combined_mapping$gene)))
tre <- subset(combined_mapping, grepl('tre.;', combined_mapping$gene)) # Trehalose utilization operon
glucosidase <- subset(combined_mapping, grepl('glucosidase', combined_mapping$gene))
cel <- rbind(subset(combined_mapping, grepl('celG;', combined_mapping$gene)),
subset(combined_mapping, grepl('celC;', combined_mapping$gene)))
polysaccharides <- rbind(sucrose, maltose, tre, glucosidase, cel)
rm(sucrose, maltose, tre, glucosidase, cel)
polysaccharides$grouping <- rep('Polysaccharide catabolism', nrow(polysaccharides))
# PTS systems
PTS <- rbind(subset(combined_mapping, grepl('PTS_system', combined_mapping$gene)),
subset(combined_mapping, grepl('pyridoxal_phosphate-dependent_transferase', combined_mapping$gene)))
PTS$grouping <- rep('PEP group translocators', nrow(PTS))
# ABC transporters
ABC <- subset(combined_mapping, grepl('ABC_transporter_sugar', combined_mapping$gene))
ABC$grouping <- rep('ABC sugar transporters', nrow(ABC))
# sugar alcohols
srl <- subset(combined_mapping, grepl('srl.;', combined_mapping$gene)) # sorbitol utilization locus
srlE <- subset(combined_mapping, grepl('srlE.;', combined_mapping$gene)) # sorbitol import
mtl <- subset(combined_mapping, grepl('mtl.;', combined_mapping$gene)) # mannitol utilization locus
sugar_alcohols <- rbind(srl, srlE, mtl)
rm(srl, srlE, mtl)
sugar_alcohols$grouping <- rep('Sugar alcohol catabolism', nrow(sugar_alcohols))
# Fermentation genes
buk <- rbind(subset(combined_mapping, grepl('buk;', combined_mapping$gene)),
subset(combined_mapping, grepl('buk.;', combined_mapping$gene))) # Butyrate kinase
ptb <- rbind(subset(combined_mapping, grepl('ptb;', combined_mapping$gene)),
subset(combined_mapping, grepl('ptb.;', combined_mapping$gene))) # phosphate butyryltransferase
acetate <- subset(combined_mapping, grepl('acetate', combined_mapping$gene))
valerate <- subset(combined_mapping, grepl('valerate', combined_mapping$gene))
sucD <- subset(combined_mapping, grepl('sucD;', combined_mapping$gene)) # succinate-semialdehyde dehydrogenase
adh <- subset(combined_mapping, grepl('adh.;', combined_mapping$gene)) # Alcohol dehydrogenase
cat <- subset(combined_mapping, grepl('cat.;', combined_mapping$gene)) # Acetate to butyrate conversion
abfD <- subset(combined_mapping, grepl('abfD;', combined_mapping$gene)) # gamma-aminobutyrate metabolism dehydratase
hbd <- subset(combined_mapping, grepl('hbd;', combined_mapping$gene)) # 3-hydroxybutyryl-CoA dehydrogenase
fermentation <- rbind(buk, ptb, acetate, valerate, sucD, adh, cat, abfD, hbd)
rm(buk, ptb, acetate, valerate, sucD, adh, cat, abfD, hbd)
fermentation$grouping <- rep('Fermentation end steps', nrow(fermentation))
# Combine genes to for supplementary table
gene_table <- rbind(amino_sugars, stickland, monosaccharides, polysaccharides, ABC, PTS, sugar_alcohols, fermentation)
gene_table$KEGG_code <- rownames(gene_table)
View(gene_table)
gene_table$Cefoperazone <- cefoperazone_actual
gene_table$Clindamycin <- clindamycin_actual
data(dune)
data(dune.env)
dune.dist <- vegdist(dune)
View(dune.env)
